@startuml シーケンス図 ログイン
actor システム管理者
boundary "ログイン画面" as mein
control "表示一" as display1
control "本人認証表示" as certification
entity "システム管理者" as system
boundary "ログイン完了" as completion
boundary "エラー画面1" as error1
boundary "エラー画面2" as error2
boundary "エラー画面3" as error3

activate システム管理者
システム管理者 -> mein :1:ログイン画面をクリック()
deactivate システム管理者
activate mein
mein -> display1 :1.1:起動()
deactivate mein
activate display1
display1 -> certification:1.1.1:値の入力()
deactivate display1
activate certification
certification -> system:1.1.1.1:情報の参照()
activate system
system --> certification
deactivate system

alt [正常]
    certification -> completion :1.1.1.2:送信()
activate completion
deactivate completion
else [無効エラー時]
    certification -> error1 :1.1.1.3:無効エラー:表示()
activate error1
deactivate error1
else [未入力]
    certification -> error2 :1.1.1.4:未入力エラー:表示()
activate error2
deactivate error2
else [ログイン失敗エラー]
    certification -> error3:1.1.1.5:ログイン失敗エラー:表示()
activate error3
error3 -[hidden]-> error3
deactivate error3
end

@enduml



@startuml
actor システム管理者
boundary "ログイン画面" as mein
boundary "パス忘れ画面" as pasforget
control "認証表示" as certification
boundary "エラー画面1" as error1
entity "システム管理者" as system
boundary "パスワード変更画面" as paschange
control "パスワード変更" as pas

entity "システム管理者" as system2
boundary "ログイン画面" as mein1


activate システム管理者
システム管理者 -> mein:1:パス忘れクリック()
activate mein
mein -> pasforget :表示():1.1
deactivate mein
activate pasforget
システム管理者 -> pasforget :2:メアドの入力()
pasforget -> certification :2.1:認証()
deactivate pasforget
activate certification
certification -> system:2.1.1メアドの比較()
activate system
system --> certification
deactivate system


alt [正常]
    certification -> paschange :2.1.2: リンク送信()
activate paschange
deactivate paschange


else [エラー時]
    certification -> error1 :2.1.3: エラー発生時:表示()
deactivate certification
activate error1
error1 -[hidden]-> error1
deactivate error1
end


システム管理者 -> paschange:3:各自の情報を入力して、登録を押す()
activate paschange
paschange -> pas:3.1起動()
deactivate paschange
activate pas
pas -> system2:3.1.1保存()
activate system2
system2 --> pas
deactivate system2
pas -> mein1:3.1.2送信()
deactivate pas
activate mein1
deactivate mein1

@enduml








@startuml ログアウトシーケンス図
actor システム管理者
boundary "ログアウト画面" as out
control "ログアウト処理" as process
boundary "ログイン画面" as in
' control "エラー表示" as error
boundary "エラー表示画面" as errorscreen

activate システム管理者
システム管理者 -> out:ポップアップの表示()
deactivate システム管理者
activate out
out -> process:起動()
deactivate out
activate process


alt [正常]
    process -> in :3.1.2: 表示()
activate in
deactivate in
else [ログアウトエラー時]
    process -> errorscreen :3.1.3: エラー発生時:表示()
deactivate process
activate errorscreen
errorscreen -[hidden]-> errorscreen
deactivate errorscreen
end

@enduml



@startuml シーケンス図登録情報確認
actor システム管理者
boundary "ユーザー一覧画面" as screenuser
control "情報の取得" as information
entity "ユーザー" as user
' control "情報詳細表示" as detail
boundary "ユーザー情報詳細確認画面" as detailuser
' control "詳細取得失敗表示" as errordetail
boundary "詳細表示失敗画面" as errorscreen
' control "ユーザー詳細失敗表示" as userdetail
boundary "ユーザー選択表示失敗画面" as userdisplay

activate システム管理者
システム管理者 -> screenuser:アクセス()
deactivate システム管理者
activate screenuser
screenuser -> information:起動()
deactivate screenuser
activate information
information -> user:情報の取得()
activate user
user --> information
deactivate user

alt [正常]
    information -> detailuser :3.1.2: 表示()
activate detailuser
deactivate detailuser
else [詳細表示エラー時]
    information -> errorscreen :3.1.3: エラー発生時:表示()
activate errorscreen
deactivate errorscreen
else [ユーザー表示エラー時]
    information -> userdisplay :エラー発生時:表示()
deactivate information
activate userdisplay
userdisplay -[hidden]-> userdisplay
deactivate userdisplay

end




@enduml
@startuml シーケンス図登録情報削除
actor システム管理者
boundary "ユーザー情報確認詳細画面" as userdetail
control "情報の取得" as detail
entity "ユーザー" as user

boundary "ユーザー情報確認詳細画面" as userdetail2
control "情報の取得" as detail1
entity "ユーザー" as user2
boundary "ユーザー一覧画面" as user3
boundary "削除失敗画面" as errordelete

activate システム管理者
システム管理者 -> userdetail:画面のクリック()

activate userdetail
userdetail -> detail:起動()
deactivate userdetail
activate detail
detail -> user:取得()
activate user
user --> detail
deactivate detail
deactivate user

システム管理者 -> userdetail2:画面のクリック()
deactivate システム管理者

activate userdetail2
userdetail2 -> detail1:起動()
deactivate userdetail2



activate detail1
detail1 -> user2:取得()
activate user2
user2 --> detail1
deactivate user2



alt [正常]
    detail1 -> user3 :3.1.2: 表示()
activate user3
deactivate user3
else [削除エラー時]
    detail1 -> errordelete :3.1.3: エラー発生時:表示()
deactivate detail1
activate errordelete
errordelete -[hidden]-> errordelete
deactivate errordelete
end

@enduml

@startuml
actor システム管理者
boundary "ログイン画面" as mein
control "表示" as display1
boundary "パス忘れ画面" as pasforget
control "認証表示" as certification
boundary "エラー画面1" as error1
entity "システム管理者" as system
boundary "パスワード変更画面" as paschange
control "パスワード変更" as pas

entity "システム管理者" as system2
boundary "ログイン画面" as mein1


activate システム管理者
システム管理者 -> mein:パス忘れクリック()
activate mein
mein -> display1:表示()
deactivate mein
activate display1
display1 -> pasforget:起動()
deactivate display1
activate pasforget
システム管理者 -> pasforget :メアドの入力()
pasforget -> certification :認証()
deactivate pasforget
activate certification
certification -> system:メアドの比較()
activate system
system --> certification
deactivate system


alt [正常]
    certification -> paschange :3.1.2: リンク送信()
activate paschange
deactivate paschange


else [エラー時]
    certification -> error1 :3.1.3: エラー発生時:表示()
deactivate certification
activate error1
error1 -[hidden]-> error1
deactivate error1
end


システム管理者 -> paschange:各自の情報を入力して、登録を押す()
activate paschange
paschange -> pas:起動()
deactivate paschange
activate pas
pas -> system2:保存()
activate system2
system2 --> pas
deactivate system2
pas -> mein1:送信()
deactivate pas
activate mein1
deactivate mein1

@enduml